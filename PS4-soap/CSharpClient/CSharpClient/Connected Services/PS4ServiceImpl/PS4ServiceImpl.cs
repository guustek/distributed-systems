//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSharpClient.PS4ServiceImpl
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.server.ps4.rsi/", ConfigurationName="CSharpClient.PS4ServiceImpl.PS4Service")]
    public interface PS4Service
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.server.ps4.rsi/PS4Service/GetProductByNameRequest", ReplyAction="http://services.server.ps4.rsi/PS4Service/GetProductByNameResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductByNameResponse> GetProductByNameAsync(CSharpClient.PS4ServiceImpl.GetProductByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.server.ps4.rsi/PS4Service/GetHelloRequest", ReplyAction="http://services.server.ps4.rsi/PS4Service/GetHelloResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetHelloResponse> GetHelloAsync(CSharpClient.PS4ServiceImpl.GetHelloRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.server.ps4.rsi/PS4Service/GetProductsRequest", ReplyAction="http://services.server.ps4.rsi/PS4Service/GetProductsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductsResponse> GetProductsAsync(CSharpClient.PS4ServiceImpl.GetProductsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.server.ps4.rsi/PS4Service/AddProductRequest", ReplyAction="http://services.server.ps4.rsi/PS4Service/AddProductResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.AddProductResponse> AddProductAsync(CSharpClient.PS4ServiceImpl.AddProductRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.server.ps4.rsi/")]
    public partial class Product
    {
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Name { get; set; }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "description", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Description { get; set; }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(ElementName = "price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int Price { get; set; }
        
        public override string ToString() => $"Product{{name='{Name}', description='{Description}', price={Price}}}";
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductByName", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetProductByNameRequest
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name { get; set; }

        public GetProductByNameRequest()
        {
        }
        
        public GetProductByNameRequest(string name)
        {
            this.Name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductByNameResponse", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetProductByNameResponse
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "product", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Product Product { get; }

        public GetProductByNameResponse()
        {
        }
        
        public GetProductByNameResponse(CSharpClient.PS4ServiceImpl.Product product)
        {
            this.Product = product;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHello", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetHelloRequest
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name { get; set; }

        public GetHelloRequest()
        {
        }
        
        public GetHelloRequest(string name)
        {
            this.Name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHelloResponse", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetHelloResponse
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "result", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Result { get; }

        public GetHelloResponse()
        {
        }
        
        public GetHelloResponse(string result)
        {
            this.Result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProducts", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetProductsRequest
    {
        
        public GetProductsRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductsResponse", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class GetProductsResponse
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "products", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Product[] Products { get; }

        public GetProductsResponse()
        {
        }
        
        public GetProductsResponse(CSharpClient.PS4ServiceImpl.Product[] products)
        {
            this.Products = products;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddProduct", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class AddProductRequest
    {
        [field: System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://services.server.ps4.rsi/", Order = 0)]
        [field: System.Xml.Serialization.XmlElementAttribute(ElementName = "product", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Product Product { get; set; }

        public AddProductRequest()
        {
        }
        
        public AddProductRequest(CSharpClient.PS4ServiceImpl.Product product)
        {
            this.Product = product;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddProductResponse", WrapperNamespace="http://services.server.ps4.rsi/", IsWrapped=true)]
    public partial class AddProductResponse
    {
        
        public AddProductResponse()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface PS4ServiceChannel : CSharpClient.PS4ServiceImpl.PS4Service, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class PS4ServiceClient : System.ServiceModel.ClientBase<CSharpClient.PS4ServiceImpl.PS4Service>, CSharpClient.PS4ServiceImpl.PS4Service
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PS4ServiceClient() : 
                base(PS4ServiceClient.GetDefaultBinding(), PS4ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.PS4ServiceImplPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PS4ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PS4ServiceClient.GetBindingForEndpoint(endpointConfiguration), PS4ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PS4ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PS4ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PS4ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PS4ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PS4ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductByNameResponse> CSharpClient.PS4ServiceImpl.PS4Service.GetProductByNameAsync(CSharpClient.PS4ServiceImpl.GetProductByNameRequest request)
        {
            return base.Channel.GetProductByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductByNameResponse> GetProductByNameAsync(string name)
        {
            CSharpClient.PS4ServiceImpl.GetProductByNameRequest inValue = new CSharpClient.PS4ServiceImpl.GetProductByNameRequest();
            inValue.Name = name;
            return ((CSharpClient.PS4ServiceImpl.PS4Service)(this)).GetProductByNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetHelloResponse> CSharpClient.PS4ServiceImpl.PS4Service.GetHelloAsync(CSharpClient.PS4ServiceImpl.GetHelloRequest request)
        {
            return base.Channel.GetHelloAsync(request);
        }
        
        public System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetHelloResponse> GetHelloAsync(string name)
        {
            CSharpClient.PS4ServiceImpl.GetHelloRequest inValue = new CSharpClient.PS4ServiceImpl.GetHelloRequest();
            inValue.Name = name;
            return ((CSharpClient.PS4ServiceImpl.PS4Service)(this)).GetHelloAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductsResponse> CSharpClient.PS4ServiceImpl.PS4Service.GetProductsAsync(CSharpClient.PS4ServiceImpl.GetProductsRequest request)
        {
            return base.Channel.GetProductsAsync(request);
        }
        
        public System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.GetProductsResponse> GetProductsAsync()
        {
            CSharpClient.PS4ServiceImpl.GetProductsRequest inValue = new CSharpClient.PS4ServiceImpl.GetProductsRequest();
            return ((CSharpClient.PS4ServiceImpl.PS4Service)(this)).GetProductsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.AddProductResponse> CSharpClient.PS4ServiceImpl.PS4Service.AddProductAsync(CSharpClient.PS4ServiceImpl.AddProductRequest request)
        {
            return base.Channel.AddProductAsync(request);
        }
        
        public System.Threading.Tasks.Task<CSharpClient.PS4ServiceImpl.AddProductResponse> AddProductAsync(CSharpClient.PS4ServiceImpl.Product product)
        {
            CSharpClient.PS4ServiceImpl.AddProductRequest inValue = new CSharpClient.PS4ServiceImpl.AddProductRequest();
            inValue.Product = product;
            return ((CSharpClient.PS4ServiceImpl.PS4Service)(this)).AddProductAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PS4ServiceImplPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PS4ServiceImplPort))
            {
                return new System.ServiceModel.EndpointAddress("http://pawel:8080/PS4-soap/PS4ServiceImpl");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PS4ServiceClient.GetBindingForEndpoint(EndpointConfiguration.PS4ServiceImplPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PS4ServiceClient.GetEndpointAddress(EndpointConfiguration.PS4ServiceImplPort);
        }
        
        public enum EndpointConfiguration
        {
            
            PS4ServiceImplPort,
        }
    }
}
